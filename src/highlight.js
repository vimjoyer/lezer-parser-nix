import { styleTags, tags as t } from "@lezer/highlight"

export const nixHighlighting = styleTags({
    Identifier: t.propertyName,
    TRUE: t.bool,
    WITH: t.bool,
    MarkCurlyOpen: t.integer,

    ASSERT: t.keyword,
    IF: t.keyword,
    THEN: t.keyword,
    ELSE: t.keyword,
    WITH: t.keyword,
    LET: t.keyword,
    IN: t.keyword,
    OR_KW: t.keyword,
    INHERIT: t.keyword,
    REC: t.keyword,
    AttrInterpolation: t.keyword,
    float: t.keyword,
    Float: t.keyword,
    Parens: t.keyword,
    FormalsRest: t.keyword,
    
    PathAbsolute: t.link,
    PathHome: t.link,
    PathLibrary: t.link,
    PathRelative: t.link,
    PathRaw: t.link,
    PathContent: t.link,
    PathComponent: t.link,
    uriPath: t.link,
    uriSchema: t.link,
    StringStart: t.string,
    StringEnd: t.string,

    FALSE: t.bool,
    StringContent: t.string,
    IndentedString: t.string,
    IndentedStringContent: t.string,
    Comment: t.lineComment,
    CommentBlock: t.blockComment,
    Float: t.float,
    Integer: t.integer,
    NULL: t.null,
    URI: t.url,
    Path: t.literal,
    "( )": t.paren,
    "{ }": t.brace,
    "[ ]": t.squareBracket,
    "if then else": t.controlKeyword,
    "import with let in rec builtins inherit assert or": t.keyword,
})
